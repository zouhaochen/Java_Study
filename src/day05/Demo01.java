package day05;
/*
人开门：名词提炼法
人
{
    开门（门）
    {
        门.开()
    }
}
门：开
{
    开(){操作门轴等}
}
 */

/*
面相对象：三个特征：封装，继承，多态
以后的开发：其实就是在找对象使用。没有对象就创建一个对象
找对象，建立对象，使用对象，维护对象关系
 */

/*
类和对象的关系：
现实生活中的对象：张三、李四
想要描述：提取对象中共性内容，对具体的抽象
描述时，这些对象的共性有：姓名、年龄、性别、学习java功能
映射到java中，描述就是class定义的类
具体对象就是对应java在堆内存中用new建立的实体
类就是对现实生活中事物的描述
对象就是这类事物实实在在存在的个体
 */

//需求：描述一个汽车(颜色，轮胎数)。描述事物其实就是在描述事物的属性和行为
//属性对应的是类中的变量，行为对应的是类中的函数(方法)
//其实定义类，就是在描述事物，就是在定义属性和行为。属性和行为共同成为类中的成员(成员变量和成员方法)

/*
成员变量和局部变量
作用范围：
成员变量作用于整个类中，局部变量作用于函数中，或者语句中
在内存中的位置：
成员变量：在堆内存中，因为对象的存在，才在内存中存在
局部变量：存在栈内存中
 */
class Car
{
    //描述颜色
    String color = "红色";
    //描述轮胎数
    int num = 4;

    //运行行为
    void run()
    {
        System.out.println(color+","+num);
    }
}

public class Demo01 {
    public static void main(String[] args) {
        //生产汽车，在java中通过new操作符来完成
        //其实就是在堆内存中产生一个实体
        //c就是一个类类型变量。记住：类类型变量指向对象
        Car c = new Car();
        //需求：将已有的车颜色改成蓝色。指挥该对象做事情。在java指挥方式是：对象.对象成员
        c.color = "蓝色";
        c.run();

        Car c1 = new Car();
        c1.run();

        //匿名对象
        new Car();
        //Car c = new Car();
        //c.num = 5;
        //可以简写为:
        new Car().num = 5;
        new Car().color = "blue";
        new Car().run();

        /*
        匿名对象使用方式一：
        当对对象的方法只调用一次是，可以用匿名对象来完成，这样写比较简化
        如果对一个对象进行多个成员调用，必须给这个对象起一个名字
        匿名对象使用方式二：
        可以将匿名对象作为实际参数进行传递
         */

        Car q = new Car();
        showCar(q);
        showCar(new Car());
    }

    //需求：汽车修配厂，对汽车进行改装，将来的车都改成黑色，三个轮胎
    public static void showCar(Car c)
    {
        c.num = 3;
        c.color = "黑色";
        c.run();
    }
}
